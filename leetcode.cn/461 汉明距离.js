// 461. 汉明距离

// 两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。

// 给你两个整数 x 和 y，计算并返回它们之间的汉明距离。

// 输入：x = 1, y = 4
// 输出：2

// 输入：x = 3, y = 1
// 输出：1

// 思考：
// 随机找两个数 2596 和 1801
// 0 0 1 0 1 0 0 0 1 0 0 1 0 0
// 0 0 0 1 1 1 0 0 0 0 1 0 0 1
//     ↑ ↑   ↑     ↑   ↑ ↑   ↑
// 汉明距离为7

// x ^ y
// 0 0 1 0 1 0 0 0 1 0 0 1 0 0
// 0 0 0 1 1 1 0 0 0 0 1 0 0 1
// 0 0 1 1 0 1 0 0 1 0 1 1 0 1
// 其实就是数 x ^ y 中 1 的个数

// n & (n-1) 操作可以将 n 最后一位的 1 置为 0
// 答案就呼之欲出了

// 执行用时：
// 56 ms, 在所有 JavaScript 提交中击败了84.30%的用户
// 内存消耗：
// 41.1 MB, 在所有 JavaScript 提交中击败了 64.36% 的用户
const hammingDistance = (x, y) => {
  let xor = x ^ y;
  let res = 0;
  while (xor !== 0) {
    res++;
    xor = xor & (xor - 1);
  }
  return res;
};

const x = 2596;
const y = 1801;

console.log(hammingDistance(x, y));
